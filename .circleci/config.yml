version: 2.1
# Definition of the pipeline jobs
jobs:
  # Build node project
  build:
    # Using CircleCi DOcker image for Node.js
    docker:
      - image: circleci/node:latest
        # Setting dockerhub auth configs to deploy to our dockerhub
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      # Checkout (Clone the repository to circleci on every commit) the repository
      - checkout

      # Helps to run docker commands in the executor
      - setup_remote_docker:
          # Caches the DockerFile in the job to rebuilt from the previous builds if no changes in the Dockerfile
          # This minimizes the time to build the image
          docker_layer_caching: true

      - run:
          # Command name
          name: Install dependencies
          # Command code
          command: yarn install
      - run:
          name: Run automated tests
          command: yarn test

      # Conditions
      - when:
          # Push the image from the main branch when all pull requests are accepted 
          condition:
            equal: [ main, << pipeline.git.branch >> ]
          steps:
            - run:
                name: Build and Push Docker Image
                command: |
                  docker build -t $DOCKERHUB_USERNAME/blog-demo:latest .
                  docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD docker.io
                  docker push $DOCKERHUB_USERNAME/blog-demo:latest
      
      # Builds the docker image and deploys it on dockerhub
      - run:
          name: Build and Push Docker Image
          command: |
            docker build -t $DOCKERHUB_USERNAME/food-demo:latest .
            docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD docker.io
            docker push $DOCKERHUB_USERNAME/food-demo:latest

# Define workflows. Like a small orchestration on how the jobs will be executed
workflows:
  version: 2
  food-demo-build: 
    jobs:
      - build: 
          context: food_demo
          # Filter to trigger the workflow
          filters:
            # Specify the branches filters
            branches:
              # Will execute only on changes on these two branches
              only:
                - main
                - ci-cd
